[package]
name = "jrsonnet-stdlib"
description = "jsonnet standard library packaged as crate"
version = "0.4.2"
authors = ["Yaroslav Bolyukin <iam@lach.pw>"]
license = "MIT"
edition = "2021"

[features]
default = ["codegenerated-stdlib"]
# Speed-up initialization by generating code for parsed stdlib, instead
# of invoking parser for it
codegenerated-stdlib = ["jrsonnet-parser/structdump"]
# Enables legacy `std.thisFile` support, at the cost of worse caching
legacy-this-file = []
# Add order preservation flag to some functions
exp-preserve-order = ["jrsonnet-evaluator/exp-preserve-order"]
# Preserve order for files parsed via `std.parseJson`
# Shame it isn't possible to enable per parse call, instead of globally
exp-serde-preserve-order = [
    "serde_json/preserve_order",
    "jrsonnet-evaluator/exp-serde-preserve-order",
]

[dependencies]
jrsonnet-evaluator = { path = "../jrsonnet-evaluator", features = [
    # std.parseJson parses file via serde, then converts Value to evaluator Val
    "serde_json",
], version = "0.4.2" }
jrsonnet-macros = { path = "../jrsonnet-macros", version = "0.4.2" }
jrsonnet-parser = { path = "../jrsonnet-parser", version = "0.4.2" }
jrsonnet-gcmodule = "0.3.4"

# Used for stdlib AST serialization
bincode = { version = "1.3", optional = true }
# Used both for stdlib AST serialization and std.parseJson/std.parseYaml
serde = "1.0"

# std.md5
md5 = "0.7.0"
# std.base64
base64 = "0.13.0"
# std.parseJson
serde_json = "1.0"
# std.parseYaml, custom library fork is used for C++/golang compatibility
serde_yaml_with_quirks = "0.8.24"

[build-dependencies]
jrsonnet-parser = { path = "../jrsonnet-parser", version = "0.4.2" }
structdump = { version = "0.2.0", features = ["derive"] }
